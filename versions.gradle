
ext.deps = [:]

def versions = [:]
versions.appcompat = "1.1.0"
versions.android_gradle_plugin = "3.5.0"
versions.arrow = "0.10.0"

versions.constraintlayout = "1.1.3"
versions.core_ktx = "1.1.0"
versions.core_testing = "2.0.0"
versions.coroutines = "1.3.2"

versions.dagger = "2.24"

versions.espresso = "3.1.0"

versions.javaxInject = '1'
versions.junit_ext = "1.1.0"
versions.junit5 = "5.5.1"
versions.junit5_plugin = "1.5.1.0"
versions.jwt_decode = "1.4.0"

versions.kotlin_stdlib = "1.3.50"
versions.ktlint = "0.34.2"

versions.lifecycle = "2.1.0"

versions.mockito = "3.1.0"

versions.navigation = "2.1.0"

versions.okhttp = "4.2.1"

versions.preference = "1.1.0"

versions.retrofit = "2.6.2"

versions.slf4j_timber = "3.1"

versions.test_rules = "1.1.0"
versions.test_runner = "1.1.0"
versions.threetenabp = "1.2.1"
versions.threetenbp = "1.4.0"
versions.timber = "4.7.1"
versions.truth = "1.0"

versions.view_pager2 = "1.0.0-beta05"

ext.versions = versions

def androidx = [:]
androidx.appcompat = "androidx.appcompat:appcompat:$versions.appcompat"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
androidx.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
androidx.core_testing = "androidx.arch.core:core-testing:$versions.core_testing"
androidx.navigation_fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
androidx.navigation_ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
androidx.preference = "androidx.preference:preference-ktx:$versions.preference"
androidx.safe_args = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"

deps.androidx = androidx

def arrow = [:]
arrow.core_data = "io.arrow-kt:arrow-core-data:$versions.arrow"

deps.arrow = arrow

def auth0 = [:]
auth0.jwt_decode = "com.auth0.android:jwtdecode:$versions.jwt_decode"

deps.auth0 = auth0

def coroutines = [:]
coroutines.core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
coroutines.android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
coroutines.test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutines"

deps.coroutines = coroutines

def dagger = [:]
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.dagger_compiler = "com.google.dagger:dagger-compiler:$versions.dagger"

deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"

deps.espresso = espresso

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 29
build_versions.build_tools = "29.0.2"
ext.build_versions = build_versions

def instrumentationTest = [:]
instrumentationTest.junit_ext = "androidx.test.ext:junit:$versions.junit_ext"
instrumentationTest.test_rules = "androidx.test:rules:$versions.test_rules"
instrumentationTest.test_runner = "androidx.test:runner:$versions.test_runner"

deps.instrumentationTest = instrumentationTest

def javax = [:]
javax.inject = "javax.inject:javax.inject:$versions.javaxInject"
deps.javax = javax

deps.junit5_plugin = "de.mannodermaus.gradle.plugins:android-junit5:$versions.junit5_plugin"

def junit5 = [:]
junit5.api = "org.junit.jupiter:junit-jupiter-api:$versions.junit5"
junit5.engine = "org.junit.jupiter:junit-jupiter-engine:$versions.junit5"
deps.junit5 = junit5

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_stdlib"
kotlin.gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin_stdlib"
kotlin.reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin_stdlib"

deps.kotlin = kotlin

deps.ktlint = "com.pinterest:ktlint:$versions.ktlint"

def lifecycle = [:]
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"

deps.lifecycle = lifecycle

def mockito = [:]
mockito.core = "org.mockito:mockito-inline:$versions.mockito"

deps.mockito = mockito

def okhttp = [:]
okhttp.runtime = "com.squareup.okhttp3:okhttp:$versions.okhttp"
okhttp.logging_interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.okhttp"
deps.okhttp = okhttp

def retrofit = [:]
retrofit.core = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"

deps.retrofit = retrofit

deps.slf4j_timber = "com.arcao:slf4j-timber:$versions.slf4j_timber"

def threeten = [:]
threeten.abp = "com.jakewharton.threetenabp:threetenabp:$versions.threetenabp"
threeten.bp = "org.threeten:threetenbp:$versions.threetenbp"

deps.threeten = threeten

deps.truth = "com.google.truth:truth:$versions.truth"

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.view_pager2 = "androidx.viewpager2:viewpager2:$versions.view_pager2"

deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.mavenCentral()
}
ext.addRepos = this.&addRepos