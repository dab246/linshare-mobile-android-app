apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply from: "$projectDir/extensions.gradle"

apply plugin: 'de.mannodermaus.android-junit5'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        applicationId "com.linagora.android.linshare"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 16
        versionName "2.0.0-alpha01"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                showExceptions true
                exceptionFormat "full"
                showCauses true
                showStackTraces true
                showStandardStreams = false
            }
        }
    }

    lintOptions {
        abortOnError true
        ignoreWarnings true
    }

    signingConfigs {
        debug {
            storeFile file('../debugKeystore.jks')
            storePassword 'linshare'
            keyAlias = 'linshareAndroid'
            keyPassword 'linshare'
        }
        release {
            storeFile file('../keystore.jks')
            storePassword "$System.env.STORE_PASSWORD"
            keyAlias "$System.env.KEY_ALIAS"
            keyPassword "$System.env.KEY_PASSWORD"
        }
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        develop {
            applicationIdSuffix ".develop"
            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    "$rootProject.rootDir.absolutePath/domain/proguard-rules.pro",
                    "$rootProject.rootDir.absolutePath/data/proguard-rules.pro"
            signingConfig signingConfigs.debug
            applicationVariants.all { variant -> renameAPK(variant, name) }
        }
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    "$rootProject.rootDir.absolutePath/domain/proguard-rules.pro",
                    "$rootProject.rootDir.absolutePath/data/proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

configurations {
    ktlint
}

def renameAPK(variant, buildTypes) {
    variant.outputs.all { output ->
        output.outputFileName = applicationName + "-" + buildTypes + ".apk"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.kotlin.stdlib

    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.core_ktx
    implementation deps.androidx.navigation_fragment
    implementation deps.androidx.navigation_ui
    implementation deps.androidx.preference
    implementation deps.apache.commons_io
    implementation deps.arrow.core_data
    implementation deps.auth0.jwt_decode

    implementation deps.coroutines.core
    implementation deps.coroutines.android

    implementation deps.dagger.android
    implementation deps.dagger.android_support

    implementation deps.glide.core

    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.live_data
    implementation deps.lifecycle.runtime

    implementation deps.kotlin.reflect

    implementation deps.material.google

    implementation deps.okhttp.logging_interceptor
    implementation deps.okhttp.runtime

    implementation deps.retrofit.core
    implementation deps.retrofit.gson
    implementation deps.room.runtime

    implementation deps.slf4j_timber
    implementation deps.swipe_refresh

    implementation deps.threeten.abp

    implementation deps.view_pager2

    implementation deps.work.run_time

    implementation project(':data')
    implementation project(':domain')

    kapt deps.dagger.dagger_compiler
    kapt deps.dagger.android_processor

    kapt deps.glide.compiler

    androidTestImplementation deps.truth

    androidTestImplementation deps.espresso.core
    androidTestImplementation deps.instrumentationTest.junit_ext
    androidTestImplementation deps.instrumentationTest.test_rules
    androidTestImplementation deps.instrumentationTest.test_runner

    testImplementation deps.androidx.core_testing
    testImplementation deps.androidx.test_core
    testImplementation deps.coroutines.test
    testImplementation deps.junit5.api
    testImplementation deps.mockito.core
    testImplementation deps.robolectric
    testImplementation deps.threeten.bp
    testImplementation deps.truth

    testImplementation project(":testshared")

    testRuntimeOnly deps.junit5.engine
    testRuntimeOnly deps.junit5.vintage_engine

    kaptTest deps.dagger.dagger_compiler

    ktlint deps.ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
}
check.dependsOn ktlint